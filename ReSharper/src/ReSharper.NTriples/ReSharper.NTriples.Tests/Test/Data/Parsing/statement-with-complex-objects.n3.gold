Language: PsiLanguageType:NTriples
INTriplesFile
  NewLine(type:NEW_LINE, text:\n) spaces:"\n"
  NewLine(type:NEW_LINE, text:\n) spaces:"\n"
  ISentences
    ISentence
      IStatement
        ISubject
          IExpression
            IIdentifier
              IUriIdentifier
                IPrefix
                  Identifier(type:IDENTIFIER, text:family)
                NTriplesTokenType+NamespaceSeparatorTokenElement(type:NAMESPACE_SEPARATOR, text::)
                ILocalName
                  Identifier(type:IDENTIFIER, text:stan)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IFacts
          IFact
            IPredicate
              IExpression
                IIdentifier
                  IUriIdentifier
                    IPrefix
                      Identifier(type:IDENTIFIER, text:itemKind)
                    NTriplesTokenType+NamespaceSeparatorTokenElement(type:NAMESPACE_SEPARATOR, text::)
                    ILocalName
                      Identifier(type:IDENTIFIER, text:stuff)
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
            Comment(type:END_OF_LINE_COMMENT, text:# uri)(CommentType:END_OF_LINE_COMMENT)
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
            IObjects
              IExpression
                IIdentifier
                  IUriIdentifier
                    NTriplesTokenType+UriBeginTokenElement(type:URI_BEGIN, text:<)
                    IUriString
                      NTriplesGenericToken(type:URI_STRING, text:http://domain.com/ontology#name)
                    NTriplesTokenType+UriEndTokenElement(type:URI_END, text:>)
              NTriplesTokenType+CommaTokenElement(type:COMMA, text:,)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IExpression
                IIdentifier
                  IUriIdentifier
                    IPrefix
                      Identifier(type:IDENTIFIER, text:basics)
                    NTriplesTokenType+NamespaceSeparatorTokenElement(type:NAMESPACE_SEPARATOR, text::)
                    ILocalName
                      Identifier(type:IDENTIFIER, text:billy)
              NTriplesTokenType+CommaTokenElement(type:COMMA, text:,)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              Comment(type:END_OF_LINE_COMMENT, text:# list of literals)(CommentType:END_OF_LINE_COMMENT)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IExpression
                IIdentifier
                  IList
                    NTriplesTokenType+LParenthesesTokenElement(type:L_PARENTHESES, text:()
                    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
                    Whitespace(type:WHITE_SPACE, text:            ) spaces:"            "
                    IExpression
                      IIdentifier
                        IDataLiteral
                          NTriplesGenericToken(type:STRING_LITERAL, text:"text literal")
                    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
                    Whitespace(type:WHITE_SPACE, text:            ) spaces:"            "
                    IExpression
                      IIdentifier
                        NTriplesGenericToken(type:INTEGER_LITERAL, text:1408)
                    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
                    Whitespace(type:WHITE_SPACE, text:            ) spaces:"            "
                    IExpression
                      IIdentifier
                        NTriplesGenericToken(type:DOUBLE_LITERAL, text:13.666)
                    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
                    Whitespace(type:WHITE_SPACE, text:            ) spaces:"            "
                    IExpression
                      IIdentifier
                        IDataLiteral
                          NTriplesGenericToken(type:STRING_LITERAL, text:"PT18H")
                          NTriplesTokenType+DataSuffixTokenElement(type:DATA_SUFFIX, text:^^)
                          IUriIdentifier
                            IPrefix
                              Identifier(type:IDENTIFIER, text:xsd)
                            NTriplesTokenType+NamespaceSeparatorTokenElement(type:NAMESPACE_SEPARATOR, text::)
                            ILocalName
                              Identifier(type:IDENTIFIER, text:duration)
                    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
                    Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
                    NTriplesTokenType+RParenthesesTokenElement(type:R_PARENTHESES, text:))
              NTriplesTokenType+CommaTokenElement(type:COMMA, text:,)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              Comment(type:END_OF_LINE_COMMENT, text:# literal keywords)(CommentType:END_OF_LINE_COMMENT)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IExpression
                IIdentifier
                  NTriplesTokenType+TrueKeywordTokenElement(type:TRUE_KEYWORD, text:true)
              NTriplesTokenType+CommaTokenElement(type:COMMA, text:,)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IExpression
                IIdentifier
                  NTriplesTokenType+FalseKeywordTokenElement(type:FALSE_KEYWORD, text:false)
              NTriplesTokenType+CommaTokenElement(type:COMMA, text:,)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IExpression
                IIdentifier
                  NTriplesTokenType+NullKeywordTokenElement(type:NULL_KEYWORD, text:null)
              NTriplesTokenType+CommaTokenElement(type:COMMA, text:,)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              Comment(type:END_OF_LINE_COMMENT, text:# variables (it should not be in a regular statement but the parser accepts it))(CommentType:END_OF_LINE_COMMENT)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IExpression
                IIdentifier
                  IVariableIdentifier
                    VariableIdentifier(type:VARIABLE_IDENTIFIER, text:?)
              NTriplesTokenType+CommaTokenElement(type:COMMA, text:,)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IExpression
                IIdentifier
                  IVariableIdentifier
                    VariableIdentifier(type:VARIABLE_IDENTIFIER, text:?someVar)
              NTriplesTokenType+CommaTokenElement(type:COMMA, text:,)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              Comment(type:END_OF_LINE_COMMENT, text:# and a simple formula)(CommentType:END_OF_LINE_COMMENT)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IExpression
                IIdentifier
                  IFormula
                    NTriplesTokenType+LBraceTokenElement(type:L_BRACE, text:{)
                    Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                    ISentences
                      ISentence
                        IStatement
                          ISubject
                            IExpression
                              IIdentifier
                                IUriIdentifier
                                  IPrefix
                                    Identifier(type:IDENTIFIER, text:family)
                                  NTriplesTokenType+NamespaceSeparatorTokenElement(type:NAMESPACE_SEPARATOR, text::)
                                  ILocalName
                                    Identifier(type:IDENTIFIER, text:jack)
                          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                          IFacts
                            IFact
                              IPredicate
                                NTriplesTokenType+AKeywordTokenElement(type:A_KEYWORD, text:a)
                              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                              IObjects
                                IExpression
                                  IIdentifier
                                    IUriIdentifier
                                      IPrefix
                                        Identifier(type:IDENTIFIER, text:limbs)
                                      NTriplesTokenType+NamespaceSeparatorTokenElement(type:NAMESPACE_SEPARATOR, text::)
                                      ILocalName
                                        Identifier(type:IDENTIFIER, text:dick)
                    Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                    NTriplesTokenType+RBraceTokenElement(type:R_BRACE, text:})
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
    NTriplesTokenType+DotTokenElement(type:DOT, text:.)

